{"version":3,"file":"static/js/67.9499882f.chunk.js","mappings":"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","sources":["app/components/pages/notebook/Notebook.tsx"],"sourcesContent":["import { useContext, useState, useEffect } from \"react\";\nimport UserContext from \"../../../context/UserContext\";\nimport {\n  Tab,\n  Tabs,\n  TabScrollButton,\n  TextField,\n  Typography,\n  Grid,\n  Tooltip,\n} from \"@mui/material\";\nimport { MainserverContext } from \"@failean/mainserver-provider\";\nimport { toast } from \"react-toastify\";\nimport { Add, Delete, Save } from \"@mui/icons-material\";\nimport { Button } from \"@mui/material\";\n\nconst Notebook = () => {\n  const mainserverContext = useContext(MainserverContext);\n  const axiosInstance = mainserverContext?.axiosInstance;\n  const { ideas, refreshUserData } = useContext(UserContext);\n  const [activeIdeaIndex, setActiveIdeaIndex] = useState<number>(0);\n  const [inputText, setInputText] = useState<string>(ideas[0]?.idea);\n\n  useEffect(() => {\n    setInputText(ideas[activeIdeaIndex]?.idea);\n  }, [ideas, activeIdeaIndex]);\n\n  const handleInputChange = (event: any) => {\n    const text = event.target.value;\n    setInputText(text);\n  };\n\n  return !ideas ? (\n    <Typography>Loading...</Typography>\n  ) : (\n    <>\n      {ideas && (\n        <Grid container direction=\"column\" rowSpacing={2}>\n          <Grid item container alignItems=\"center\">\n            <Tabs\n              value={activeIdeaIndex}\n              onChange={(e: any, x) => {\n                setActiveIdeaIndex(x);\n              }}\n              variant=\"scrollable\"\n              scrollButtons=\"auto\"\n              allowScrollButtonsMobile\n              style={{ flex: 1 }}\n            >\n              {ideas.map((idea, index) => (\n                <Tooltip title={idea.idea} key={index}>\n                  <Tab\n                    label={`${index + 1}: ${idea.idea.substring(0, 30)}...`}\n                  />\n                </Tooltip>\n              ))}\n              <TabScrollButton direction=\"right\" orientation=\"horizontal\" />\n            </Tabs>\n            <Button\n              color=\"secondary\"\n              onClick={() => {\n                if (axiosInstance)\n                  axiosInstance\n                    .post(\"data/ideas/saveIdea\", {\n                      idea: \" \",\n                    })\n                    .then(() => {\n                      refreshUserData();\n                    })\n                    .catch(() => {\n                      refreshUserData();\n                      toast.error(\"Error saving data to server\");\n                    });\n              }}\n              style={{ marginLeft: \"16px\" }}\n            >\n              New <Add />\n            </Button>\n          </Grid>\n          <Grid item>\n            <TextField\n              disabled={ideas.length === 0}\n              multiline\n              rows={10}\n              variant=\"outlined\"\n              fullWidth\n              onChange={handleInputChange}\n              value={inputText}\n            />\n          </Grid>\n          <Grid item container columnSpacing={4}>\n            <Grid item>\n              <Button\n                color=\"secondary\"\n                disabled={ideas.length === 0}\n                onClick={() => {\n                  if (axiosInstance)\n                    axiosInstance\n                      .post(\"data/ideas/saveIdea\", {\n                        idea: inputText,\n                        ideaID: ideas[activeIdeaIndex]._id,\n                      })\n                      .then(() => {\n                        refreshUserData();\n                      })\n                      .catch(() => {\n                        refreshUserData();\n                        toast.error(\"Error saving data to server\");\n                      });\n                }}\n              >\n                <Save />\n                Save this Idea\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button\n                color=\"secondary\"\n                disabled={ideas.length === 0}\n                onClick={() => {\n                  if (axiosInstance)\n                    axiosInstance\n                      .post(\"data/ideas/archiveIdea\", {\n                        ideaID: ideas[activeIdeaIndex]._id,\n                      })\n                      .then(() => {\n                        refreshUserData();\n                      })\n                      .catch(() => {\n                        refreshUserData();\n                        toast.error(\"Error saving data to server\");\n                      });\n                }}\n              >\n                <Delete />\n                Delete this Idea\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      )}\n    </>\n  );\n};\n\nexport default Notebook;\n"],"names":["_ideas$","mainserverContext","useContext","MainserverContext","axiosInstance","_useContext","UserContext","ideas","refreshUserData","_useState","useState","_useState2","_slicedToArray","activeIdeaIndex","setActiveIdeaIndex","_useState3","idea","_useState4","inputText","setInputText","useEffect","_ideas$activeIdeaInde","_jsx","_Fragment","children","_jsxs","Grid","container","direction","rowSpacing","item","alignItems","Tabs","value","onChange","e","x","variant","scrollButtons","allowScrollButtonsMobile","style","flex","map","index","Tooltip","title","Tab","label","concat","substring","TabScrollButton","orientation","Button","color","onClick","post","then","catch","toast","error","marginLeft","Add","TextField","disabled","length","multiline","rows","fullWidth","event","text","target","columnSpacing","ideaID","_id","Save","Delete","Typography"],"sourceRoot":""}